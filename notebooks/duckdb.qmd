---
title: "Agriculture processing"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os
os.chdir("..")
from dotenv import load_dotenv
load_dotenv()
```

```{python}
from src.dao.jp_imports_raw import create_trade_tables, select_all_jp_trade_data
from src.jp_imports.data_pull import DataPull
from sqlmodel import create_engine
from datetime import datetime
import polars as pl
import pandas as pd
import ibis
```

```{python}
d = DataPull(debug=True)
```

```{python}
d.insert_int_org("data/raw/jp_instance.parquet")
```



```{python}
con = ibis.connect("db.sqlite")
imports = pl.scan_csv("data/raw/IMPORT_HTS10_ALL.csv", ignore_errors=True)
exports = pl.scan_csv("data/raw/EXPORT_HTS10_ALL.csv", ignore_errors=True)
df = pl.concat([imports, exports], how="vertical")
df.collect()
```

```{python}
# Normalize column names
int_df = df
int_df = int_df.rename({col: col.lower() for col in int_df.collect_schema().names()})
int_df = int_df.with_columns(date=pl.col("year").cast(pl.String) + "-" + pl.col("month").cast(pl.String) + "-01")
int_df = int_df.with_columns(pl.col("date").cast(pl.Date))
int_df = int_df.with_columns(unit_1=pl.col("unit_1").str.to_lowercase())
int_df = int_df.with_columns(commodity_code=pl.col("hts").cast(pl.String).str.zfill(10).str.replace("'", ""))
int_df = int_df.with_columns(trade_id=pl.when(pl.col("import_export") == "i").then(1).otherwise(2)).rename({"value": "data"})
hts = pl.from_arrow(con.table("htstable").to_pyarrow()).lazy()
unit = pl.from_arrow(con.table("unittable").to_pyarrow()).lazy()
country = pl.from_arrow(con.table("countrytable").to_pyarrow()).lazy()

int_df = int_df.join(country, left_on="country", right_on="country_name", how="left").rename({"id": "country_id"})
int_df = int_df.join(hts, left_on="commodity_code", right_on="hts_code", how="left").rename({"id": "hts_id"})
int_df = int_df.join(unit, left_on="unit_1", right_on="unit_code", how="left").rename({"id": "unit1_id"})
int_df = int_df.join(unit, left_on="unit_2", right_on="unit_code", how="left").rename({"id": "unit2_id"})

int_df = int_df.select(pl.col("date", "trade_id", "country_id", "hts_id",
                                    "unit1_id", "unit2_id", "data", "qty_1", "qty_2"))

int_df.collect()
```

```{python}
con.insert("inttradedata", int_df)
```

```{python}
con = ibis.connect("db.sqlite")
pl.from_arrow(con.table("inttradedata").to_pyarrow())
```

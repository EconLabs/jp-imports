---
title: "Agriculture processing"
format:
  html:
    code-fold: true
jupyter: python3
---

```{python}
import os
os.chdir("..")
```

```{python}
from src.jp_imports.data_process import DataTrade
import polars as pl
import ibis
ibis.options.interactive = True
```

```{python}
d = DataTrade(debug=True)
```


```{python}
time = "monthly"
types = "naics"
df2 = d.process_int_jp(agg=time, types=types,filter="0101100000")
df2
```

```{python}
df.mutate(
            conv_1=ibis.case()
                .when(df.unit_1 == "kg", df.qty_1 * 1)
                .when(df.unit_1 == "l", df.qty_1 * 1)
                .when(df.unit_1 == "doz", df.qty_1 / 0.756)
                .when(df.unit_1 == "m3", df.qty_1 * 1560)
                .when(df.unit_1 == "t", df.qty_1 * 907.185)
                .when(df.unit_1 == "kts", df.qty_1 * 1)
                .when(df.unit_1 == "pfl", df.qty_1 * 0.789)
                .when(df.unit_1 == "gm", df.qty_1 * 0.001)
                .else_(df.qty_1)
                .end(),
            conv_2=ibis.case()
                .when(df.unit_2 == "kg", df.qty_2 * 1)
                .when(df.unit_2 == "l", df.qty_2 * 1)
                .when(df.unit_2 == "doz", df.qty_2 / 0.756)
                .when(df.unit_2 == "m3", df.qty_2 * 1560)
                .when(df.unit_2 == "t", df.qty_2 * 907.185)
                .when(df.unit_2 == "kts", df.qty_2 * 1)
                .when(df.unit_2 == "pfl", df.qty_2 * 0.789)
                .when(df.unit_2 == "gm", df.qty_2 * 1000)
                .else_(df.qty_2)
                .end(),
            qrt=ibis.case()
                .when((df.date.month() >= 1) & (df.date.month() <= 3), 1)
                .when((df.date.month() >= 4) & (df.date.month() <= 8), 2)
                .when((df.date.month() >= 7) & (df.date.month() <= 9), 3)
                .when((df.date.month() >= 10) & (df.date.month() <= 12), 4)
                .else_(0)
                .end(),
            fiscal_year=ibis.case()
                .when(df.date.month() > 6, df.date.year() + 1)
                .else_(df.date.year())
                .end()).to_pandas()
```
